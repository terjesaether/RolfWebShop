@model RolfWebShop.Models.Product
    @using RolfWebShop.Models

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <h2>Endre "@Model.ProductName"</h2>

    @using (Html.BeginForm("EditProduct", "StoreManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductId)

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.About, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.About, new { @class = "form-control text-area", rows = 10 })
                    @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                </div>

            </div>


            <div class="form-group">

                <label class="control-label col-md-2">Pris pr. @Model.Unit</label>
                @*@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-2">
                    @Html.EditorFor(model => model.PriceToProducts.LastOrDefault().Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                @*@Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-1" })*@
                <div class="col-md-2">

                    @*@Html.DropDownList("Unit", EnumHelper.GetSelectList(typeof(Unit)), ".. pr stk/kg", new { @class = "form-control" })*@
                    @Html.DropDownList("UnitId", null, "kg/stk", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Offer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Offer)
                        @Html.ValidationMessageFor(model => model.Offer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.DropDownList("CategoryId", null, "Velg kategori ...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.DropDownList("ProducerId", null, "Velg produsent ...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-10 col-md-2">
                    <input type="submit" value="Lagre endringer" class="btn btn-success pull-right" />
                </div>
            </div>

            <div class="form-group">
                <input type="file" class="control-label inputfile" id="file" name="file" accept="image/*" onchange="loadFile(event)" data-multiple-caption="{count} files selected" multiple>
                <label for="file"><span class="glyphicon glyphicon-upload"></span><span id="file-upload-text"><strong>&nbsp;Velg et bilde</strong></span></label>
            </div>

            <div class="row">
                <div class="col-md-4"><img id="output" class="img-responsive" src="@Model.MainImgUrl" alt="" /></div>

            </div>


        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>
@section scripts {
    <script src="~/Scripts/custom/fileUpload.js" type="text/javascript"></script>
}